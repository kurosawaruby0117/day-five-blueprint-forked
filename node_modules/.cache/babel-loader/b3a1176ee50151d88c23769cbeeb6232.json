{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ichangjin/Downloads/day-five-blueprint-forked/src/Screens/Exchanges/exchangePresenter.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../Loding\";\nimport { couldStartTrivia } from \"typescript\";\nvar exArray = [];\n\nvar Exs = function Exs(ex) {\n  if (ex === null || ex === void 0 ? void 0 : ex.links) {\n    console.log(ex.links.website);\n  }\n\n  var newDes;\n\n  if (ex.description) {\n    newDes = ex.description.slice(0, 20);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, ex.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, newDes));\n};\n\nvar Make_ex = function Make_ex(exchanges) {\n  exchanges.map(function (ex) {\n    var exex = /*#__PURE__*/React.createElement(Exs, {\n      key: ex.id,\n      ex: ex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }\n    });\n    exArray.push(exex);\n  });\n};\n\nvar ExchangePresenter = function ExchangePresenter(_ref) {\n  var exchange = _ref.exchange,\n      loading = _ref.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    });\n  } else {\n    Make_ex(exchange);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, exArray);\n  }\n};\n\nexport default ExchangePresenter;","map":{"version":3,"sources":["/Users/ichangjin/Downloads/day-five-blueprint-forked/src/Screens/Exchanges/exchangePresenter.js"],"names":["React","PropTypes","Loading","couldStartTrivia","exArray","Exs","ex","links","console","log","website","newDes","description","slice","name","Make_ex","exchanges","map","exex","id","push","ExchangePresenter","exchange","loading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,IAAIC,OAAO,GAAC,EAAZ;;AAEA,IAAMC,GAAG,GAAC,SAAJA,GAAI,CAACC,EAAD,EAAM;AACd,MAAGA,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEC,KAAP,EAAa;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAE,CAACC,KAAH,CAASG,OAArB;AACD;;AACD,MAAIC,MAAJ;;AACA,MAAGL,EAAE,CAACM,WAAN,EAAkB;AACfD,IAAAA,MAAM,GAACL,EAAE,CAACM,WAAH,CAAeC,KAAf,CAAqB,CAArB,EAAuB,EAAvB,CAAP;AACF;;AAED,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,EAAE,CAACQ,IAAR,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,MAAN,CAFA,CADF;AAOD,CAhBD;;AAiBA,IAAMI,OAAO,GAAC,SAARA,OAAQ,CAACC,SAAD,EAAa;AACzBA,EAAAA,SAAS,CAACC,GAAV,CAAc,UAACX,EAAD,EAAM;AAChB,QAAMY,IAAI,gBAAC,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEZ,EAAE,CAACa,EAAb;AAAiB,MAAA,EAAE,EAAEb,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACAF,IAAAA,OAAO,CAACgB,IAAR,CAAaF,IAAb;AACH,GAHD;AAKD,CAND;;AAQA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,OAA2B;AAAA,MAAxBC,QAAwB,QAAxBA,QAAwB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAEnD,MAAIA,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACLR,IAAAA,OAAO,CAACO,QAAD,CAAP;AACA,wBAAO,0CAAGlB,OAAH,CAAP;AACD;AACF,CARD;;AAUA,eAAeiB,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../Loding\";\nimport { couldStartTrivia } from \"typescript\";\n\nlet exArray=[];\n\nconst Exs=(ex)=>{\n  if(ex?.links){\n    console.log(ex.links.website)\n  }\n  let newDes;\n  if(ex.description){\n     newDes=ex.description.slice(0,20);\n  }\n  \n  return(\n    <>\n    <h1>{ex.name}</h1>\n    <div>{newDes}</div>\n    \n    </>\n  )\n}\nconst Make_ex=(exchanges)=>{\n  exchanges.map((ex)=>{\n      const exex=<Exs key={ex.id} ex={ex}/>\n      exArray.push(exex);\n  }\n  )\n}\n\nconst ExchangePresenter = ({ exchange, loading }) => {\n  \n  if (loading) {\n    return <Loading />;\n  } else {\n    Make_ex(exchange)\n    return(<>{exArray}</>);\n  }\n};\n\nexport default ExchangePresenter;\n"]},"metadata":{},"sourceType":"module"}