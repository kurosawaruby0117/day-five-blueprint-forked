{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ichangjin/Downloads/day-five-blueprint-forked/src/Screens/Exchanges/exchangePresenter.js\";\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../Loding\";\nimport { couldStartTrivia } from \"typescript\";\nvar exArray = [];\n\nvar Exs = function Exs(_ref) {\n  var ex = _ref.ex;\n  var newDesc;\n\n  if (ex.description) {\n    if (newDesc && newDesc.length > 20) {\n      newDesc = newDesc.slice(0, 30);\n      newDesc = newDesc + \"...\";\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, ex.name), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, newDesc), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, ex.links.website));\n};\n\nvar Make_ex = function Make_ex(exchanges) {\n  exchanges.map(function (ex) {\n    var exex = /*#__PURE__*/React.createElement(Exs, {\n      key: ex.id,\n      ex: ex,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }\n    });\n    exArray.push(exex);\n  });\n};\n\nvar ExchangePresenter = function ExchangePresenter(_ref2) {\n  var exchange = _ref2.exchange,\n      loading = _ref2.loading;\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(Loading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }\n    });\n  } else {\n    Make_ex(exchange);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, exArray);\n  }\n};\n\nexport default ExchangePresenter;","map":{"version":3,"sources":["/Users/ichangjin/Downloads/day-five-blueprint-forked/src/Screens/Exchanges/exchangePresenter.js"],"names":["React","PropTypes","Loading","couldStartTrivia","exArray","Exs","ex","newDesc","description","length","slice","name","links","website","Make_ex","exchanges","map","exex","id","push","ExchangePresenter","exchange","loading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,IAAIC,OAAO,GAAC,EAAZ;;AAEA,IAAMC,GAAG,GAAC,SAAJA,GAAI,OAAQ;AAAA,MAANC,EAAM,QAANA,EAAM;AAChB,MAAIC,OAAJ;;AACE,MAAGD,EAAE,CAACE,WAAN,EAAkB;AAChB,QAAGD,OAAO,IAAIA,OAAO,CAACE,MAAR,GAAe,EAA7B,EAAgC;AAC9BF,MAAAA,OAAO,GAACA,OAAO,CAACG,KAAR,CAAc,CAAd,EAAgB,EAAhB,CAAR;AACAH,MAAAA,OAAO,GAACA,OAAO,GAAC,KAAhB;AACD;AACF;;AAGD,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,EAAE,CAACK,IAAR,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,OAAN,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,EAAE,CAACM,KAAH,CAASC,OAAf,CAHA,CADF;AASH,CAnBD;;AAoBA,IAAMC,OAAO,GAAC,SAARA,OAAQ,CAACC,SAAD,EAAa;AACzBA,EAAAA,SAAS,CAACC,GAAV,CAAc,UAACV,EAAD,EAAM;AAChB,QAAMW,IAAI,gBAAC,oBAAC,GAAD;AAAK,MAAA,GAAG,EAAEX,EAAE,CAACY,EAAb;AAAiB,MAAA,EAAE,EAAEZ,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX;AACAF,IAAAA,OAAO,CAACe,IAAR,CAAaF,IAAb;AACH,GAHD;AAKD,CAND;;AAQA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,QAA2B;AAAA,MAAxBC,QAAwB,SAAxBA,QAAwB;AAAA,MAAdC,OAAc,SAAdA,OAAc;;AAEnD,MAAIA,OAAJ,EAAa;AACX,wBAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACLR,IAAAA,OAAO,CAACO,QAAD,CAAP;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMjB,OAAN,CAAP;AACD;AACF,CARD;;AAUA,eAAegB,iBAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Loading from \"../Loding\";\nimport { couldStartTrivia } from \"typescript\";\n\nlet exArray=[];\n\nconst Exs=({ex})=>{\n  var newDesc;\n    if(ex.description){\n      if(newDesc && newDesc.length>20){\n        newDesc=newDesc.slice(0,30);\n        newDesc=newDesc+\"...\"\n      }\n    }\n    \n    \n    return(\n      <>\n      <h3>{ex.name}</h3>\n      <div>{newDesc}</div>\n      <div>{ex.links.website}</div>\n      </>\n    )\n  \n  \n}\nconst Make_ex=(exchanges)=>{\n  exchanges.map((ex)=>{\n      const exex=<Exs key={ex.id} ex={ex}/>\n      exArray.push(exex);\n  }\n  )\n}\n\nconst ExchangePresenter = ({ exchange, loading }) => {\n  \n  if (loading) {\n    return <Loading />;\n  } else {\n    Make_ex(exchange)\n    return(<div>{exArray}</div>);\n  }\n};\n\nexport default ExchangePresenter;\n"]},"metadata":{},"sourceType":"module"}